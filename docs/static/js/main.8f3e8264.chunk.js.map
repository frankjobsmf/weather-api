{"version":3,"sources":["components/CityWeather.js","helpers/getWeather.js","components/CityWeatherGrid.js","hooks/useFetchWeather.js","WeatherAPI.js","index.js"],"names":["CityWeather","setCityValue","useState","inputValue","setInputValue","handleSubmit","e","preventDefault","onSubmit","className","onClick","type","placeholder","value","onChange","target","getWeather","city","a","url","fetch","resp","json","data","error","cityWeather","name","region","country","celsius","location","current","temp_c","CityWeatherGrid","loading","setValue","useEffect","then","setTimeout","useFetchWeather","console","log","role","WeatherAPI","cityValue","map","cv","ReactDOM","render","document","getElementById"],"mappings":"8LA6CeA,EA3CK,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAEnB,EAAsCC,mBAAS,IAA/C,mBAAQC,EAAR,KAAoBC,EAApB,KAMMC,EAAe,SAACC,GAClBA,EAAEC,iBAEiB,KAAfJ,IAIJF,EAAa,CAACE,IACdC,EAAc,MAGlB,OACI,8BAEI,sBAAMI,SAAUH,EAAhB,SACI,sBAAKI,UAAU,mBAAf,UACI,wBACIC,QAASL,EACTI,UAAU,kBACVE,KAAK,SAHT,oBAMA,uBACIA,KAAK,OACLF,UAAU,eACVG,YAAY,YACZC,MAAOV,EACPW,SA/BM,SAACR,GACvBF,EAAcE,EAAES,OAAOF,kB,uBCPlBG,EAAU,uCAAG,WAAOC,GAAP,2BAAAC,EAAA,6DAChBC,EADgB,0FACyEF,EADzE,oBAEHG,MAAOD,GAFJ,cAEhBE,EAFgB,gBAGHA,EAAKC,OAHF,YAGhBC,EAHgB,QAKZC,MALY,wBAMZC,EAAc,CAChBC,KAAM,GACNC,OAAQ,GACRC,QAAS,GACTC,QAAS,IAVK,kBAaXJ,GAbW,eAgBdK,EAAsBP,EAAtBO,SAAUC,EAAYR,EAAZQ,QAEZN,EAAc,CACZC,KAAMI,EAASJ,KACfC,OAAQG,EAASH,OACjBC,QAASE,EAASF,QAClBC,QAASE,EAAQC,QAtBH,kBAyBfP,GAzBe,4CAAH,sDCsCRQ,EAnCS,SAAC,GAAc,IAEnC,ECF2B,SAAEhB,GAE7B,MAA0Bf,mBAAS,CAC/BqB,KAAM,GACNW,SAAS,IAFb,mBAAOrB,EAAP,KAAcsB,EAAd,KAwBA,OAlBAC,qBAAU,WAUN,OATApB,EAAWC,GAAMoB,MAAM,SAAAhB,GAAI,OACvBiB,YAAY,WACRH,EAAS,CACLZ,KAAMF,EACNa,SAAS,MAEf,SAGC,WACHC,EAAS,CACLZ,KAAM,GACNW,SAAS,OAGlB,CAACjB,IAEGJ,EDxBmB0B,CAFQ,EAAXtB,MAEfM,EAAR,EAAQA,KAAMW,EAAd,EAAcA,QAENR,EAAmCH,EAAnCG,KAAMC,EAA6BJ,EAA7BI,OAAQC,EAAqBL,EAArBK,QAASC,EAAYN,EAAZM,QAI/B,OAFAW,QAAQC,IAAIf,GAGR,mCAEIQ,EAGI,qBAAKzB,UAAU,sBAAsBiC,KAAK,QAA1C,gCAMA,sBAAKjC,UAAU,oBAAf,UACI,oBAAIA,UAAU,WAAd,SAA0BiB,IAC1B,uBAEA,qBAAIjB,UAAU,gBAAd,UAA+BkB,EAA/B,MAA0CC,KAC1C,qBAAInB,UAAU,UAAd,UAAyBoB,EAAzB,gBEGLc,EA3BI,WAEf,MAAoCzC,mBAAS,IAA7C,mBAAQ0C,EAAR,KAAmB3C,EAAnB,KAEA,OACI,sBAAKQ,UAAU,YAAf,UACI,oBAAIA,UAAU,QAAd,2BAEA,sBAAKA,UAAU,eAAf,UACI,cAAC,EAAD,CAAaR,aAAcA,IAGvB2C,EAAUC,KAAK,SAAAC,GAAE,OACb,cAAC,EAAD,CAEI7B,KAAO6B,GADDA,aCblCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8f3e8264.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\nconst CityWeather = ( {setCityValue} ) => {\r\n\r\n    const [ inputValue, setInputValue ] = useState('');\r\n    \r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue === ''){\r\n            return;\r\n        }\r\n\r\n        setCityValue([inputValue]);\r\n        setInputValue('');\r\n    } \r\n\r\n    return (\r\n        <div>\r\n            \r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"input-group mb-3\">\r\n                    <button\r\n                        onClick={handleSubmit}\r\n                        className=\"btn btn-primary\" \r\n                        type=\"button\"\r\n                        >Buscar\r\n                    </button>\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control\" \r\n                        placeholder=\"Ciudad...\" \r\n                        value={inputValue}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CityWeather;","export const getWeather = async( city ) => {\r\n    const url = `https://api.weatherapi.com/v1/current.json?key=efdbee390beb40dcae701258212504&q=${city}&aqi=no`;\r\n    const resp = await fetch( url );\r\n    const data = await resp.json();\r\n\r\n    if ( data.error){\r\n        const cityWeather = {\r\n            name: '',\r\n            region: '',\r\n            country: '',\r\n            celsius: ''\r\n        }\r\n\r\n        return cityWeather;\r\n    }\r\n\r\n    const { location, current } = data; \r\n\r\n    const cityWeather = {\r\n            name: location.name,\r\n            region: location.region,\r\n            country: location.country,\r\n            celsius: current.temp_c\r\n        }\r\n\r\n    return cityWeather;\r\n}","import React from 'react';\r\nimport { useFetchWeather } from '../hooks/useFetchWeather';\r\n\r\nconst CityWeatherGrid = ({ city }) => {\r\n\r\n    const { data, loading } = useFetchWeather(city);\r\n\r\n    const { name, region, country, celsius } = data;\r\n    \r\n    console.log(name);\r\n\r\n    return (\r\n        <>\r\n        {\r\n            loading\r\n            ?\r\n            (\r\n                <div className=\"alert alert-primary\" role=\"alert\">\r\n                        Cargando ciudad...\r\n                </div>\r\n            )\r\n            :\r\n            (\r\n                <div className=\"city-weather-grid\">\r\n                    <h2 className=\"nameCity\">{name}</h2>\r\n                    <hr/>\r\n                    \r\n                    <h3 className=\"regionCountry\">{region} - {country}</h3>\r\n                    <h2 className=\"celsius\">{celsius}Â°</h2>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    </>\r\n\r\n    )\r\n}\r\n\r\nexport default CityWeatherGrid;","import { useState, useEffect } from 'react';\r\nimport { getWeather } from '../helpers/getWeather';\r\n\r\nexport const useFetchWeather = ( city ) => {\r\n\r\n    const [value, setValue] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        getWeather(city).then( resp => \r\n            setTimeout( () => {\r\n                setValue({\r\n                    data: resp,\r\n                    loading: false\r\n                })\r\n            },2500)\r\n    \r\n        );\r\n        return () => {\r\n            setValue({\r\n                data: [],\r\n                loading: true\r\n            });\r\n        }\r\n    }, [city]);\r\n\r\n    return value;\r\n}","import React, {useState} from 'react';\r\nimport CityWeather from './components/CityWeather';\r\nimport CityWeatherGrid from './components/CityWeatherGrid';\r\n\r\nconst WeatherAPI = () => {\r\n    \r\n    const [ cityValue, setCityValue ] = useState([]);\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <h2 className=\"title\"> Weather API </h2>\r\n            \r\n            <div className=\"city-weather\">\r\n                <CityWeather setCityValue={setCityValue}/>\r\n\r\n                {\r\n                    cityValue.map( cv => (\r\n                        <CityWeatherGrid \r\n                            key={ cv }\r\n                            city={ cv }\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherAPI;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport WeatherAPI from './WeatherAPI';\n\nReactDOM.render(\n  <WeatherAPI />,\n  document.getElementById('root')\n);"],"sourceRoot":""}